/* MapleMono Font Family */
@import url('https://cdn.jsdelivr.net/npm/@catppuccin/palette/css/catppuccin.css');

:root {
    font-family: 'MapleMono', monospace;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html, body {
    height: 100%;
    overflow-x: hidden;
    overflow-y: auto;
}

td, th {
    padding: 0px 0px 0px 16px;
    text-align: left;
    vertical-align: top;
}

.background {
    position: fixed;
    display: block;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
}

a, a:visited {
    color: #7183b9;
    text-decoration: none;
    transition: color 0.2s ease;
}

a:hover {
    color: #89b4fa;
    text-decoration: underline;
}

body {
    background: var(--ctp-mocha-mantle);
    color: var(--ctp-mocha-text);
    min-height: 100vh;
    width: 100%;
    transition: background 0.3s ease, color 0.3s ease;
}

.global-container {
    display: flex;
    align-items: center;
    align-content: center;
    flex-direction: column;
    justify-content: center;
    min-height: 100vh;
    width: 100%;
    padding: 1rem;
}

.container {
    margin-top: 1rem;
    width: 90%;
    max-width: 800px;
    background: var(--ctp-mocha-base);
    border: 3px var(--ctp-mocha-surface0);
    border-style: hidden hidden hidden solid;
    border-radius: 0 8px 8px 0;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

.container p{
    padding: 0.8rem;
    line-height: 1.6;
}

header {
    font-size: 0.8rem;
    width: 100%;
    background: var(--ctp-mocha-surface0);
    border-radius: 0 4px 0 0;
}

header h2 {
    margin: 0;
    padding: 8px 0px 8px 0.8rem;
    font-weight: 600;
}

header h2::before {
    content: "â–¶\a0";
    display: inline-block;
    color: var(--ctp-mocha-green);
}

table {
    width: 100%;
    border-collapse: collapse;
    margin: 0.5rem 0;
}

tr:hover {
    background: var(--ctp-mocha-surface0);
}

.project-description {
    font-size: 0.9em;
    color: var(--ctp-mocha-subtext1);
    font-style: italic;
}

.tech-stack {
    font-size: 0.8em;
    color: var(--ctp-mocha-overlay1);
    margin-top: 0.2rem;
}

.status-badge {
    padding: 2px 6px;
    border-radius: 4px;
    font-size: 0.7em;
    font-weight: bold;
}

.status-active {
    background: var(--ctp-mocha-green);
    color: var(--ctp-mocha-base);
}

.status-maintenance {
    background: var(--ctp-mocha-yellow);
    color: var(--ctp-mocha-base);
}

.status-archived {
    background: var(--ctp-mocha-overlay0);
    color: var(--ctp-mocha-text);
}

footer {
    margin-top: 2rem;
    padding: 1rem;
    text-align: center;
    border-top: 1px solid var(--ctp-mocha-surface0);
    width: 90%;
    max-width: 800px;
}

footer p {
    color: var(--ctp-mocha-subtext1);
}

/* Control Panel */
.control-panel {
    position: fixed;
    top: 20px;
    right: 20px;
    background: var(--ctp-mocha-surface0);
    border: 2px solid var(--ctp-mocha-surface1);
    border-radius: 8px;
    padding: 12px;
    z-index: 1000;
    backdrop-filter: blur(10px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

.control-panel h3 {
    margin-bottom: 8px;
    font-size: 0.9rem;
    color: var(--ctp-mocha-text);
}

.toggle-btn {
    background: var(--ctp-mocha-base);
    color: var(--ctp-mocha-text);
    border: 1px solid var(--ctp-mocha-surface2);
    padding: 6px 12px;
    margin: 4px;
    border-radius: 4px;
    cursor: pointer;
    font-family: inherit;
    font-size: 0.8rem;
    transition: all 0.2s ease;
}

.toggle-btn:hover {
    background: var(--ctp-mocha-surface1);
}

.toggle-btn.active {
    background: var(--ctp-mocha-green);
    color: var(--ctp-mocha-base);
}

/* CRT Effects */
.crt {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    width: 100%;
    padding: 0.5rem;
    filter: url(#SphereMapTest);
}

.vignette::before {
    content: "";
    background: rgb(2, 0, 36);
    background: radial-gradient(circle, rgba(2, 0, 36, 0) 61%, rgba(0, 0, 0, 0.4) 100%);
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    pointer-events: none;
}

.crt>p::selection {
    color: black;
    background: green;
}

@keyframes flicker {
0% { opacity: 0.27861; }
15% { opacity: 0.34769; }
10% { opacity: 0.23604; }
15% { opacity: 0.90626; }
20% { opacity: 0.18128; }
25% { opacity: 0.83891; }
30% { opacity: 0.65583; }
35% { opacity: 0.67807; }
40% { opacity: 0.26559; }
45% { opacity: 0.84693; }
50% { opacity: 0.96019; }
55% { opacity: 0.08594; }
60% { opacity: 0.20313; }
65% { opacity: 0.71988; }
70% { opacity: 0.53455; }
75% { opacity: 0.37288; }
80% { opacity: 0.71428; }
85% { opacity: 0.70419; }
90% { opacity: 0.7003; }
95% { opacity: 0.36108; }
100% { opacity: 0.24387; }
}

@keyframes textShadow {
0% { text-shadow: 0.2px 0 1px rgba(0, 30, 255, 0.08), -0.2px 0 1px rgba(255, 0, 80, 0.15), 0 0 3px; }
25% { text-shadow: 0.4px 0 1px rgba(0, 30, 255, 0.08), -0.4px 0 1px rgba(255, 0, 80, 0.15), 0 0 3px; }
50% { text-shadow: 0.1px 0 1px rgba(0, 30, 255, 0.08), -0.1px 0 1px rgba(255, 0, 80, 0.15), 0 0 3px; }
75% { text-shadow: 0.6px 0 1px rgba(0, 30, 255, 0.08), -0.6px 0 1px rgba(255, 0, 80, 0.15), 0 0 3px; }
100% { text-shadow: 0.5px 0 1px rgba(0, 30, 255, 0.08), -0.5px 0 1px rgba(255, 0, 80, 0.15), 0 0 3px; }
}

.crt::after {
    content: " ";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    width: 100%;
    height: 100%;
    background: rgba(18, 16, 16, 0.1);
    opacity: 0;
    z-index: 2;
    pointer-events: none;
    animation: flicker 0.15s infinite;
}

.crt::before {
    content: " ";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%), linear-gradient(90deg, rgba(255, 0, 0, 0.06), rgba(0, 255, 0, 0.02), rgba(0, 0, 255, 0.06));
    z-index: 2;
    background-size: 100% 2px, 3px 100%;
    pointer-events: none;
}

.crt {
    animation: textShadow 1.6s infinite;
}

/* Disabled states */
.no-crt::after,
.no-crt::before {
    display: none;
}

.no-crt {
    animation: none;
    filter: none;
}

.no-vignette::before {
    display: none;
}

.no-background .background {
    display: none;
}

/* Mobile-specific adjustments */
@media (max-width: 768px) {
    .global-container {
        padding: 0.5rem;
        justify-content: flex-start;
        padding-top: 2rem;
    }

    .container {
        width: 95%;
        margin-top: 0.5rem;
    }

    .crt {
        padding: 0.25rem;
        min-height: 100dvh;
        font-size: 1.1rem;
    }

    header {
        font-size: 1rem;
    }

    header h2 {
        padding: 6px 0px 6px 0.5rem;
        font-size: 1.1rem;
    }

    td, th {
        padding: 0px 0px 0px 8px;
        font-size: 1.2rem;
    }

    p {
        font-size: 1.1rem;
        line-height: 1.4;
    }

    .control-panel {
        top: 10px;
        right: 10px;
        padding: 8px;
    }

    .control-panel h3 {
        font-size: 0.8rem;
    }

    .toggle-btn {
        padding: 4px 8px;
        font-size: 0.7rem;
    }

    .crt::before {
        background-size: 100% 3px, 4px 100%;
        opacity: 0.7;
    }

    .crt::after {
        animation: flicker 0.3s infinite;
    }
}

@media (max-width: 480px) {
    .global-container {
        padding: 0.25rem;
    }

    .container {
        width: 98%;
    }

    .crt {
        font-size: 1.2rem;
    }

    header {
        font-size: 1.1rem;
    }

    header h2 {
        font-size: 1.2rem;
    }

    td, th {
        padding: 0px 0px 0px 4px;
        font-size: 1.3rem;
    }

    p {
        font-size: 1.2rem;
        line-height: 1.5;
    }

    .crt::before {
        opacity: 0.5;
    }

    .control-panel {
        position: relative;
        top: auto;
        right: auto;
        margin-bottom: 1rem;
        width: 100%;
        max-width: 400px;
    }

    .control-panel h3 {
        text-align: center;
    }

    .toggle-btn {
        width: calc(50% - 8px);
    }
}

@media (hover: none) and (pointer: coarse) {
    a, button {
        min-height: 44px;
        padding: 8px;
    }

    @media (prefers-reduced-motion: reduce) {
        .crt::after,
        .crt {
            animation: none;
        }
    }
}

@media (max-width: 768px) and (orientation: landscape) {
    .global-container {
        justify-content: center;
        padding-top: 1rem;
    }

    .crt {
        min-height: 100vh;
    }
}
